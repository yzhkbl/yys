<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeethink.system.mapper.ZyjrBankAccountMapper">
    
    <resultMap type="ZyjrBankAccount" id="ZyjrBankAccountResult">
        <result property="id"    column="id"    />
  <!--      <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />-->
        <result property="bankId"    column="bank_id"    />
        <result property="baoxian"    column="baoxian"    />
        <result property="bankDeposit"    column="bank_deposit"    />
        <result property="userNumber"    column="user_number"    />
        <result property="householdName"    column="household_name"    />
    </resultMap>

    <sql id="selectZyjrBankAccountVo">
        select id, bank_id, bank_deposit, user_number,baoxian, household_name from zyjr_bank_account
    </sql>

    <select id="selectZyjrBankAccountList" parameterType="ZyjrBankAccount" resultMap="ZyjrBankAccountResult">
        <include refid="selectZyjrBankAccountVo"/>
        <where>  
            <if test="bankId != null  and bankId != ''"> and bank_id = #{bankId}</if>
            <if test="bankDeposit != null  and bankDeposit != ''"> and bank_deposit = #{bankDeposit}</if>
            <if test="userNumber != null  and userNumber != ''"> and user_number = #{userNumber}</if>
            <if test="householdName != null  and householdName != ''"> and household_name like concat('%', #{householdName}, '%')</if>
            <if test="baoxian != null  and baoxian != ''"> and baoxian like concat('%', #{baoxian}, '%')</if>
        </where>
    </select>
    
    <select id="selectZyjrBankAccountById" parameterType="Long" resultMap="ZyjrBankAccountResult">
        <include refid="selectZyjrBankAccountVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertZyjrBankAccount" parameterType="ZyjrBankAccount" useGeneratedKeys="true" keyProperty="id">
        insert into zyjr_bank_account
        <trim prefix="(" suffix=")" suffixOverrides=",">

            <if test="bankId != null">bank_id,</if>
            <if test="bankDeposit != null">bank_deposit,</if>
            <if test="userNumber != null">user_number,</if>
            <if test="householdName != null">household_name,</if>
            <if test="baoxian != null">baoxian,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">

            <if test="bankId != null">#{bankId},</if>
            <if test="bankDeposit != null">#{bankDeposit},</if>
            <if test="userNumber != null">#{userNumber},</if>
            <if test="householdName != null">#{householdName},</if>
            <if test="baoxian != null">#{baoxian},</if>
         </trim>
    </insert>
    <insert id="insertZyjrBankAccounts" parameterType="java.util.List">
        INSERT INTO zyjr_bank_account (

        bank_id,
        baoxian,
        bank_deposit,
        user_number,
        household_name
        )
        VALUES
        <foreach collection ="list" item="ZyjrBankAccount" separator =",">
            (#{ZyjrBankAccount.bankId},#{ZyjrBankAccount.baoxian}, #{ZyjrBankAccount.bankDeposit},#{ZyjrBankAccount.userNumber},#{ZyjrBankAccount.householdName})
        </foreach >
    </insert>

    <update id="updateZyjrBankAccount" parameterType="ZyjrBankAccount">
        update zyjr_bank_account
        <trim prefix="SET" suffixOverrides=",">

            <if test="bankId != null">bank_id = #{bankId},</if>
            <if test="baoxian != null">baoxian = #{baoxian},</if>
            <if test="bankDeposit != null">bank_deposit = #{bankDeposit},</if>
            <if test="userNumber != null">user_number = #{userNumber},</if>
            <if test="householdName != null">household_name = #{householdName},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteZyjrBankAccountById" parameterType="Long">
        delete from zyjr_bank_account where bank_id = #{id}
    </delete>

    <delete id="deleteZyjrBankAccountByIdd" parameterType="Long">
        delete from zyjr_bank_account where baoxian = #{id}
    </delete>

    <delete id="deleteZyjrBankAccountByIds" parameterType="String">
        delete from zyjr_bank_account where bank_id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
</mapper>